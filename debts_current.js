// список долгов:

// к 23/04

// - сделать dubounce на input в PostPage
// + выход из модалки "создать пост" по клику на серый фон

// ________________________________________________________________

//  почему нет хуков в vue. Потому что вместо хуков папку нужно было назвать Composables.

//  Composable (композиция) - это концепция программирования, которая заключается в создании маленьких,
//  независимых и переиспользуемых частей кода, называемых композициями (compositions),
// ________________________________________________________________

// + что происходит в v-intersection (binding value)

//   binding - аргумент (объект) метода mounted()
// у которого есть свойство value. в данном случае мы туда передаем функцию loadMorePosts и чтобы вызвать обращаемся к ней через объект binding
// <div v-intersection="loadMorePosts" class="observer"></div>

// _________________________________________________________________

// Приоритет миксинов и обычного кода с такими же методами

// В Vue.js миксины (mixins) имеют более высокий приоритет, чем обычный код компонента. Когда компонент использует несколько миксинов,
// их методы и свойства объединяются в единое пространство имен (namespace), и при конфликтах используется следующий приоритет:

// 1. Методы и свойства внутри компонента имеют наивысший приоритет и переопределяют любые методы и свойства миксинов.
// 2. Методы и свойства внутри последнего добавленного миксина имеют приоритет над методами и свойствами в предыдущих миксинах.
// 3. Если в нескольких миксинах объявлен одинаковый метод или свойство, то используется версия из последнего добавленного миксина.
// 4. Если несколько миксинов имеют одинаковый хук (hook), то они вызываются в порядке добавления миксинов, начиная с самого первого.

// _________________________________________________________________

// $router.push ('/posts) и как переписать его же в скрипт (в nav bar)

// Получаем объект маршрутизатора
const router = new VueRouter();

router.push("/path-to-redirect");

// _________________________________________________________________

// старые долги:

// динамический импорт
// реэкспорт
// FSD (feature sliced design)
